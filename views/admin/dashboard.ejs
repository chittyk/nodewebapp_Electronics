<%- include("../../views/partials/admin/header") %>

<title>Admin Dashboard</title>
<link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://unpkg.com/feather-icons"></script>
</head>
<body class="bg-gray-100 text-gray-800" style="margin-left: 240px; width: calc(100% - 240px);">

    <!-- Dashboard Header -->
    <header class="flex justify-between items-center p-6 bg-white shadow-md mb-6">
        <h1 class="text-3xl font-semibold">Admin Dashboard</h1>
        <div class="flex items-center space-x-4">
            <!-- Year Dropdown -->
            <select id="yearSelect" class="border px-4 py-2 rounded-md">
                <option value="2024">2024</option>
                <option value="2025">2025</option>
                <!-- Add more years as needed -->
            </select>
            <!-- Chart Filter Dropdown -->
            <select id="chartFilter" class="border px-4 py-2 rounded-md">
                <option value="monthly">Monthly</option>
                <option value="yearly">Yearly</option>
            </select>
        </div>
    </header>

    <!-- KPI Cards -->
    <div class="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8 p-6">
        <div class="bg-white p-6 rounded-lg shadow-md text-center">
            <i data-feather="dollar-sign" class="text-green-500 text-4xl mb-2"></i>
            <p class="text-sm">Total Revenue</p>
            <p id="totalRevenue" class="text-2xl font-bold">â‚¹<%= totalRevenue %></p>
        </div>
        <div class="bg-white p-6 rounded-lg shadow-md text-center">
            <i data-feather="shopping-cart" class="text-blue-500 text-4xl mb-2"></i>
            <p class="text-sm">Total Orders</p>
            <p id="totalOrders" class="text-2xl font-bold"><%= totalOrders %></p>
        </div>
        <div class="bg-white p-6 rounded-lg shadow-md text-center">
            <i data-feather="users" class="text-purple-500 text-4xl mb-2"></i>
            <p class="text-sm">Total Customers</p>
            <p id="totalCustomers" class="text-2xl font-bold"><%= totalCustomers %></p>
        </div>
        <div class="bg-white p-6 rounded-lg shadow-md text-center">
            <i data-feather="trending-up" class="text-orange-500 text-4xl mb-2"></i>
            <p class="text-sm">Completed Orders</p>
            <p id="completedOrders" class="text-2xl font-bold"><%= completedOrders %></p>
        </div>
    </div>

    <!-- Combined Graph: Products, Categories, Brands -->
    <div class="bg-white p-6 rounded-lg shadow-md mb-8">
        <h2 class="text-xl font-semibold mb-4">Top Products, Categories, and Brands</h2>
        <canvas id="combinedChart"></canvas>
    </div>

    <!-- Sales vs Revenue Graph -->
    <div class="bg-white p-6 rounded-lg shadow-md mb-8">
        <h2 class="text-xl font-semibold mb-4">Sales vs Revenue</h2>
        <canvas id="salesRevenueChart"></canvas>
    </div>

    <!-- Generate Ledger Button -->
    <div class="p-6 text-center">
        <button id="generateLedger" class="bg-blue-500 text-white px-6 py-3 rounded-md">Generate Ledger Book</button>
    </div>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
    feather.replace(); // Initialize Feather Icons

    // Monthly and Yearly Data
    const monthlySalesData = JSON.parse('<%- salesCount %>');
    const yearlySalesData = JSON.parse('<%- totalSalesArray %>')
    const monthlyRevenueData = JSON.parse('<%- revenue %>');
    const yearlyRevenueData = JSON.parse('<%- totalRevenueArray %>')
    let selectedYear = '2024'; // Initial year selection
    let salesData = monthlySalesData[selectedYear];
    let revenueData = monthlyRevenueData[selectedYear];

    // Combined Chart: Products, Categories, Brands
    const combinedChart = new Chart(document.getElementById("combinedChart").getContext("2d"), {
        type: "bar",
        data: {
            labels: ['Product A', 'Product B', 'Product C', 'Product D'],
            datasets: [
                {
                    label: "Top Products",
                    data: [250, 200, 150, 100,90],
                    backgroundColor: "rgba(255, 159, 64, 0.6)",
                    borderColor: "rgba(255, 159, 64, 1)",
                    borderWidth: 1
                },
                {
                    label: "Top Categories",
                    data: [300, 250, 200, 150],
                    backgroundColor: "rgba(153, 102, 255, 0.6)",
                    borderColor: "rgba(153, 102, 255, 1)",
                    borderWidth: 1
                },
                {
                    label: "Top Brands",
                    data: [350, 300, 250, 200],
                    backgroundColor: "rgba(75, 192, 192, 0.6)",
                    borderColor: "rgba(75, 192, 192, 1)",
                    borderWidth: 1
                }
            ]
        },
        options: {
            responsive: true,
            plugins: {
                legend: { display: true }
            },
            scales: {
                y: { beginAtZero: true }
            }
        }
    });

    // Sales vs Revenue Chart
    const salesRevenueChart = new Chart(document.getElementById("salesRevenueChart").getContext("2d"), {
        type: "line",
        data: {
            labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'],
            datasets: [
                {
                    label: 'Sales',
                    data: salesData,
                    borderColor: "rgba(255, 159, 64, 1)",
                    backgroundColor: "rgba(255, 159, 64, 0.2)",
                    fill: true,
                    borderWidth: 2
                },
                {
                    label: 'Revenue',
                    data: revenueData,
                    borderColor: "rgba(75, 192, 192, 1)",
                    backgroundColor: "rgba(75, 192, 192, 0.2)",
                    fill: true,
                    borderWidth: 2
                }
            ]
        },
        options: {
            responsive: true,
            plugins: {
                legend: { display: true }
            },
            scales: {
                y: { beginAtZero: true }
            }
        }
    });

    // Year Select Change Event
    document.getElementById("yearSelect").addEventListener("change", function (e) {
        selectedYear = e.target.value; // Update the selected year

        // Update sales and revenue data for the selected year
        salesData = yearlySalesData;
        revenueData = yearlyRevenueData;

        // Update Sales vs Revenue Chart
        salesRevenueChart.data.datasets[0].data = salesData;
        salesRevenueChart.data.datasets[1].data = revenueData;
        salesRevenueChart.data.labels = ["2020", "2021", "2022", "2023", "2024", "2025", "2026", "2027", "2028", "2029", "2030"]; // Example yearly labels
        salesRevenueChart.update(); // Re-render the chart
    });

    // Filter Function to Toggle Between Monthly and Yearly
    document.getElementById("chartFilter").addEventListener("change", function (e) {
        const period = e.target.value;

        if (period === "yearly") {
            salesData = yearlySalesData; // Update to yearly data
            revenueData = yearlyRevenueData; // Update to yearly data
            salesRevenueChart.data.labels = ["2020", "2021", "2022", "2023", "2024", "2025", "2026", "2027", "2028", "2029", "2030"]; // Update labels for yearly data
        } else {
            salesData = monthlySalesData[selectedYear]; // Update to monthly data
            revenueData = monthlyRevenueData[selectedYear]; // Update to monthly data
            salesRevenueChart.data.labels = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sept", "Oct", "Nov", "Dec"]; // Update labels for monthly data
        }

        // Update Sales vs Revenue Chart
        salesRevenueChart.data.datasets[0].data = salesData;
        salesRevenueChart.data.datasets[1].data = revenueData;
        salesRevenueChart.update(); // Re-render the chart
    });
});

    </script>
</body>
</html>
